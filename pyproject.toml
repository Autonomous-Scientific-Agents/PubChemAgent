[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pubchem-agent"
version = "0.1.0"
description = "A modern LangChain application using LangGraph agents for natural language access to PubChem database"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "PubChemAgent Contributors"}
]
keywords = ["chemistry", "pubchem", "langchain", "langgraph", "ai", "agent"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Chemistry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "langchain>=0.1.0",
    "langgraph>=0.0.30",
    "langchain-openai>=0.0.5",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "requests>=2.28.0",
    "pandas>=1.5.0",
    "numpy>=1.24.0",
    "toml>=0.10.2",
]

[project.optional-dependencies]
web = [
    "streamlit>=1.25.0",
]
gemini = [
    "langchain-google-genai>=0.0.5",
]
claude = [
    "langchain-anthropic>=0.0.5",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
all = [
    "pubchem-agent[web,gemini,claude,dev]",
]

[project.urls]
Homepage = "https://github.com/your-username/pubchem-agent"
Documentation = "https://github.com/your-username/pubchem-agent#readme"
Repository = "https://github.com/your-username/pubchem-agent"
"Bug Tracker" = "https://github.com/your-username/pubchem-agent/issues"

[project.scripts]
pubchem-agent = "pubchem_agent.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["pubchem_agent*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
pubchem_agent = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | external
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["external/*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "external/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=pubchem_agent",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
] 